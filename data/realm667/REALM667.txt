Class Arachnophyte : Actor
{
  Default
  {
    Health 500;
    Radius 64;
    Height 100;
    Speed 6;
    PainChance 15;
    Mass 5000;
    SEESOUND "arachnophyte/sight";
    PAINSOUND "arachnophyte/pain";
    DEATHSOUND "arachnophyte/death";
    ATTACKSOUND "spider/attack";
    OBITUARY "%o was perforated by an Arachnophyte.";
    Decal "Bulletchip";
    MONSTER;
    +NoGravity
    +FloatBob
    +Float
    +NoRadiusDMG
    +FireResist
  }

  States
  {
  Spawn:
    APYT A 0 A_PlaySound("arachnophyte/engine");
    APYT ABABAB 4 A_Look();
    Loop;
  See:
    APYT A 0 A_PlaySound("arachnophyte/engine");
    APYT AABBAABBAABB 2 A_Chase();
    Loop;
  Missile:
    APYT A 0 A_PlaySound("arachnophyte/engine");
    APYT BABAB 4 A_FaceTarget();
  LoopMissile:
    APYT A 0 A_PlaySound("arachnophyte/engine");
    APYT CD 4 A_SPosAttack();
    APYT D 1 A_SpidRefire();
    Loop;
  Pain:
    APYT A 1 A_Pain();
    Goto See;
  Death:
    APYT A 0 A_PlaySound("spider/death");
    APYT A 4 A_Scream();
    APYT B 4;
    APYT EF 8;
    APYT G 6 A_Explode(128, 255, XF_NOTMISSILE);
    APYT H 6 A_Fall();
    APYT IJ 6;
    Stop;
  }
}

Class BFGGuy : Actor
{
  Default
  {
    Tag "BFG Commando";
    obituary "%o was vapourized by a zombie's BFG9000.";
    health 200;
    radius 20;
    height 56;
    mass 100;
    speed 8;
    painchance 170;
    seesound "chainguy/sight";
    painsound "chainguy/pain";
    deathsound "chainguy/death";
    activesound "chainguy/active";
    dropitem "BFG9000";
    MONSTER;
    +FLOORCLIP
  }

  states
  {
  Spawn:
    BFGZ AB 10 A_Look();
    loop;
  See:
    BFGZ AABBCCDD 3 A_Chase();
    loop;
  Missile:
    BFGZ E 0 A_FaceTarget();
    BFGZ E 20 A_PlaySound("weapons/bfgf");
    BFGZ F 10 Bright;
    BFGZ F 10 Bright A_SpawnProjectile("BFGBall");
    BFGZ E 20;
    goto See;
  Pain:
    BFGZ G 3;
    BFGZ G 3 A_Pain;
    goto See;
  Death:
    BFGZ H 5;
    BFGZ I 5 A_Scream;
    BFGZ J 5 A_NoBlocking;
    BFGZ KLM 5;
    BFGZ N -1;
    stop;
  XDeath:
    BFGZ O 5;
    BFGZ P 5 A_XScream;
    BFGZ Q 5 A_NoBlocking;
    BFGZ RS 5;
    BFGZ T -1;
    stop;
  Raise:
    BFGZ NMLKJIH 5;
    goto See;
  }
}

Class BloodDemonClone : Actor
{
  Default
  {
    Tag "Blood Demon";
    Health 300;
    Speed 12;
    Height 56;
    Radius 30;
    Mass 400;
    PainChance 180;
    REACTIONTIME 8;
    SeeSound "blooddemon/sight";
    PainSound "blooddemon/pain";
    DeathSound "blooddemon/death";
    ActiveSound "blooddemon/active";
    //MeleeSound "blooddemon/melee";
    HitObituary "%o Was chewed up and spat out by a Mech-demon.";
    MONSTER;
    +FLOORCLIP
  }

  States
  {
  Spawn:
    SRG2 AB 10 A_Look();
    Loop;
  See:
    SRG2 A 0 A_PlaySound("blooddemon/walk");
    SRG2 AABB 2 A_Chase();
    SRG2 C 0 A_PlaySound("blooddemon/walk");
    SRG2 CCDD 2 A_Chase();
    Loop;
  Melee:
    SRG2 E 0 A_PlaySound("blooddemon/melee");
    SRG2 EF 8 A_FaceTarget();
    SRG2 G 8 A_CustomMeleeAttack(5*Random(1,8));
    Goto See;
  Pain:
    SRG2 H 2;
    SRG2 H 2 A_Pain();
    Goto See;
  Death:
    SRG2 I 8 ;
    SRG2 I 0 A_FaceTarget();
    SRG2 J 0 A_SpawnItemEx("BloodDemonArm", 10, 0, 32, 0, 8, 0, 0, 128);
    SRG2 J 8 A_Scream();
    SRG2 K 4;
    SRG2 L 4 A_NoBlocking();
    SRG2 M 4;
    SRG2 N -1;
    Stop;
  Raise:
    SRG2 NMLKJI 5;
    Goto See;
  }
}

Class BloodDemonArm : Actor
{
  Default
  {
    Radius 8;
    Height 8;
    Speed 8;
    +DOOMBOUNCE;
    +DROPOFF;
    +Missile;
  }

  States
  {
  Spawn:
    SG2A ABCDEFGH 2;
    Loop;
  Death:
    SG2A I -1;
    Loop;
  }
}

Class Cybruiser : BaronOfHell
{
  Default
  {
    Health 2000;
    Radius 24;
    Height 64;
    Mass 1000;
    Speed 8;
    PainChance 20;
    Obituary "%o was blown away by a Cybruiser.";
    HitObituary "%o was smashed by a Cybruiser.";
    SeeSound "monster/brusit";
    PainSound "baron/pain";
    DeathSound "monster/brudth";
    Monster;
    +FloorClip
    +MissileMore
    +Boss
    +DontHarmClass
  }

  States
  {
  Spawn:
    BRUS AB 10 A_Look();
    Loop;
  See:
    BRUS A 1 A_Playsound("monster/bruwlk");
    BRUS A 2 A_Chase();
    BRUS A 3 A_Chase();
    BRUS BB 3 A_Chase();
    BRUS C 1 A_Playsound("monster/bruwlk");
    BRUS C 2 A_Chase();
    BRUS C 3 A_Chase();
    BRUS DD 3 A_Chase();
    Loop;
  Missile:
    BRUS E 8 A_FaceTarget();
    BRUS F 12 Bright A_SpawnProjectile("BruiserMissile",38,15,0,0);
    BRUS E 12 A_FaceTarget();
    BRUS F 12 Bright A_SpawnProjectile("BruiserMissile",38,15,0,0);
    BRUS E 12 A_FaceTarget();
    BRUS F 12 Bright A_SpawnProjectile("BruiserMissile",38,15,0,0);
    Goto See;
  Melee:
    BRUS GH 8 A_FaceTarget();
    BRUS I 8 A_CustomMeleeAttack(10*random(1,8), "baron/melee");
    Goto See;
  Pain:
    BRUS J 2;
    BRUS J 2 A_Pain();
    Goto See;
  Death:
    BRUS K 6 Bright A_Scream();
    BRUS LMN 6 Bright;
    BRUS O 6 Bright A_NoBlocking();
    BRUS QR 6 Bright;
    BRUS S 6;
    BRUS T -1 A_BossDeath();
    Stop;
  }
}

Class BruiserMissile : Actor
{
  Default
  {
    Radius 8;
    Height 12;
    Speed 20;
    Damage 10;
    DamageType "Fire";
    Scale 1.0;
    RenderStyle "Normal";
    SeeSound "monster/brufir";
    DeathSound "weapons/hellex";
    Decal "Scorch";
    Projectile;
    +ThruGhost
  }

  States
  {
  Spawn:
    FBRS A 1 Bright;
    FBRS A 1 Bright A_SpawnItemEx("BruiserTrail",0,0,0,0,0,0,0,128);
    Loop;
  Death:
    BAL3 C 0 Bright A_SetTranslucent(0.67,1);
    BAL3 C 6 Bright;
    BAL3 D 6 Bright A_Explode(64,64,0);
    BAL3 E 6 Bright;
    Stop;
  }
}

Class BruiserTrail : Actor
{
  Default
  {
    Radius 3;
    Height 3;
    RenderStyle "Translucent";
    Alpha 0.67;
    Projectile;
  }

  States
  {
  Spawn:
    TNT1 A 3 Bright;
    PUFF ABCD 4 BRIGHT;
    Stop;
  }
}

Class QuadShotgunZombie : Actor
{
  int magazine;

  Default
  {
    Tag "Quad-Shotgun Zombie";
    Health 140;
    Radius 20;
    Height 56;
    Mass 100;
    Speed 8;
    PainChance 60;
    SeeSound "ShotGuy/Sight";
    PainSound "ShotGuy/Pain";
    DeathSound "ShotGuy/Death";
    ActiveSound "ShotGuy/Active";
    Obituary "%o was smeared by a Quad-Shotgun Zombie";
    DropItem "Shell";
    Monster;
    +FloorClip
  }

  States
  {
  Spawn:
    QSZM AAAAAAAAAABBBBBBBBBB 1 A_Look();
    Loop;
  See:
    QSZM AABBCCDD 3 A_Chase();
    Loop;
  Missile:
    QSZM E 0 DecideToQuad();
    QSZM EE 5 A_FaceTarget();
    QSZM F 4 Bright
    {
      A_PlaySound("QuadShotgunZombie/SingleFire", CHAN_WEAPON);
      magazine++;
      A_CustomBulletAttack(6, 6, 5, 3, "Bulletpuff");
    }
    QSZM E 6 A_FaceTarget();
    QSZM E 0 A_JumpIf(magazine >= 4, "StartReload");
    QSZM E 0 A_Jump(96, "Missile");
    QSZM EE 6 A_FaceTarget();
    Goto See;
  QuadShot:
    QSZM EEE 5 A_FaceTarget();
    QSZM F 4 Bright
    {
      A_PlaySound("QuadShotgunZombie/QuadFire", CHAN_WEAPON);
      magazine=4;
      A_CustomBulletAttack(11, 11, 20, 3, "Bulletpuff");
    }
    QSZM EE 6 A_FaceTarget();
    Goto StartReload;
  StartReload:
    QSZM E 0 { bNoPain=true; }
    QSZM E 10 A_PlaySound("QuadShotgunZombie/Reload1", CHAN_7);
  Reloading:
    QSZM E 10
    {
      magazine--;
      A_PlaySound("QuadShotgunZombie/Reload2", CHAN_6);
    }
    QSZM E 0 A_JumpIf(magazine > 0, "Reloading");
    QSZM E 10 A_PlaySound("QuadShotgunZombie/Reload3", CHAN_7);
    QSZM E 0 { bNoPain=false; }
    Goto See;
  Pain:
    QSZM G 3;
    QSZM G 3 A_Pain();
    Goto See;
  Death:
    QSZM H 8;
    QSZM I 8 A_Scream();
    QSZM J 8 A_NoBlocking();
    QSZM K 8;
    QSZM L -1;
    Stop;
  XDeath:
    QSZM M 5;
    QSZM N 5 A_XScream();
    QSZM O 5 A_NoBlocking();
    QSZM PQRST 5;
    QSZM U -1;
    Stop;
  Raise:
    QSZM L 5;
    QSZM KJIH 5;
    Goto See;
  }

  state DecideToQuad()
  {
    //If we're full, close enough, and some randomness
    if(magazine == 0 && CheckIfCloser(target, 384) && Random() < 64)
      return ResolveState("QuadShot");
    return ResolveState(null);
  }
}

Class MaulerDemon : Actor
{
  Default
  {
    Tag "Mauler Demon";
    Health 150;
    PainChance 180;
    Speed 10;
    Radius 30;
    Height 56;
    Mass 400;
    Damage 2; //Horns = pain. I say no more
    SeeSound "demon/sight";
    AttackSound "demon/melee";
    PainSound "demon/pain";
    DeathSound "demon/death";
    ActiveSound "demon/active";
    Obituary "%o was gored by a Mauler Demon.";
    HitObituary "%o was mauled by a Mauler Demon";
    Monster;
    +FLOORCLIP
  }

  States
  {
  Spawn:
    MAUD AB 10 A_Look();
    Loop;
  See:
    MAUD AABBCCDD 2
    { //Thanks to Blue Shadow for this routine
      statelabel st = null; //Default to no missile state
      if (CheckIfCloser(target, 224)) //If we're close enough to charge
        st = "Missile"; //Then set missile state so we can charge
      A_Chase("Melee", st); //And chase
    }
    Loop;
  Melee:
    MAUD EF 8 A_FaceTarget();
    MAUD G 8 A_SargAttack();
    Goto See;
  Missile:
    MAUD E 4 A_FaceTarget();
    MAUD F 10 A_SkullAttack();
    MAUD G 5 A_Gravity();
    Goto See;
  Pain:
    MAUD H 2;
    MAUD H 2 A_Pain();
    Goto See;
  Death:
    MAUD I 8;
    MAUD J 8 A_Scream();
    MAUD K 4;
    MAUD L 4 A_Fall();
    MAUD M 4;
    MAUD N -1;
    Stop;
  Raise:
    MAUD N 5;
    MAUD MLKJI 5;
    Goto See;
  }
}

Class LordofHeresy : Actor
{
  Default
  {
    Tag "Heresy Lord";
    Health 1250;
    Radius 20;
    Height 56;
    Speed 13;
    PainChance 50;
    BloodColor "7D 9D 59";
    Mass 1000;
    Obituary "%o was annihilated by the heresy lord.";
    SeeSound "LordOfHeresy/sight";
    PainSound "demon/pain";
    DeathSound "LordOfHeresy/death";
    ActiveSound "LordOfHeresy/act";
    MONSTER;
    +FLOORCLIP
  }

  States
  {
  Spawn:
    LOHS AB 10 A_Look();
    Loop;
  See:
    LOHS AABBCCDD 4 A_Chase();
    Loop;
  Missile:
    LOHS E 0 A_Jump(85, "Missile2");
    LOHS E 0 A_Jump(128, "Missile3");
    LOHS EF 8 A_FaceTarget();
    LOHS G 8 A_BruisAttack();
    Goto See;
  Missile2:
    LOHS EF 8 A_FaceTarget();
    LOHS G 8
    {
      A_SpawnProjectile("BaronBall", 32, 0,  8);
      A_SpawnProjectile("BaronBall", 32, 0,  0);
      A_SpawnProjectile("BaronBall", 32, 0, -8);
    }
    Goto See;
  Missile3:
    LOHS EF 8 A_FaceTarget();
    LOHS G 8
    {
      A_SpawnProjectile("BaronBall", 32, 0, -20);
      A_SpawnProjectile("BaronBall", 32, 0,   0);
    }
    LOHS EF 8 A_FaceTarget();
    LOHS G 8
    {
      A_SpawnProjectile("BaronBall", 32, 0,  20);
      A_SpawnProjectile("BaronBall", 32, 0,   0);
    }
    LOHS EF 8 A_FaceTarget();
    LOHS G 8
    {
      A_SpawnProjectile("BaronBall", 32, 0, -12);
      A_SpawnProjectile("BaronBall", 32, 0,  12);
    }
    Goto See;
  Pain:
    LOHS H 5;
    LOHS H 5 A_Pain();
    Goto See;
  Death:
    LOHS I 8;
    LOHS J 8 A_Scream();
    LOHS K 8 A_Fall();
    LOHS LMN 8;
    LOHS O -1;
    Stop;
  Raise:
    LOHS ONMLKJI 5;
    Goto See;
  }
}

Class Terminator : Actor
{
  Default
  {
    Health 5000;
    Radius 24;
    Height 64;
    Mass 1500;
    Speed 12;
    PainChance 8;
    scale 1.2;
    Obituary "%o was liquidated by a Terminator.";
    Damagefactor "Redblast", 0.0;
    SeeSound "monster/termsit";
    PainSound "monster/termpin";
    DeathSound "monster/termdth";
    ActiveSound "Terminator/termact";
    MONSTER;
    +FLOORCLIP
    +MISSILEMORE
    +BOSS
    +DONTHARMCLASS
    +NORADIUSDMG
  }

  States
  {
  Spawn:
    TERM AB 10 A_Look();
    Loop;
  See:
    TERM A 1 A_Playsound("Terminator/terstepA");
    TERM A 3 A_Chase();
    TERM ABB 4 A_Chase();
    TERM C 1 A_Playsound("Terminator/terstepA");
    TERM C 3 A_Chase();
    TERM CDD 4 A_Chase();
    Loop;
  Pain:
    TERM L 3;
    TERM L 3 A_Pain();
    Goto See;
  Missile:
    TERM E 0 A_Jump(192, "Missile2");
    TERM E 8 A_FaceTarget();
    TERM F 8 Bright A_SpawnProjectile("TerminatorBlaster",38,15,0,0);
    TERM E 0 A_jump(128, "See");
    TERM E 8 A_Spidrefire();
    Goto Missile+1;
  Missile2:
    TERM G 0 A_Jump(160, "Missile3");
    TERM G 2 A_Facetarget();
    TERM H 1 Bright A_CustomBulletAttack (15, 8, 2, 4, "Terminatorpuff");
    TERM H 1 Bright A_Playsound("Terminator/tershotB");
    TERM G 2 A_Facetarget();
    TERM I 1 Bright A_CustomBulletAttack (15, 8, 2, 4, "Terminatorpuff");
    TERM I 1 Bright A_Playsound("Terminator/tershotB");
    TERM G 0 A_jump(16, 2);
    TERM G 1 A_Spidrefire();
    Goto Missile2+2;
  Missile3:
    TERM J 0 A_Jump(128, "Missile4");
    TERM J 8 A_Facetarget();
    TERM K 8 Bright A_SpawnProjectile("Redstar", 38, -15, 0, 0);
    Goto See;
  Missile4:
    TERM J 0 A_Jumpifcloser(192, "Missile5");
    TERM J 8 A_Facetarget();
    TERM K 8 Bright A_SpawnProjectile("Redgrenade", 38, -15, 0, 0);
    Goto See;
  Missile5:
    TERM J 8 A_Facetarget();
    TERM K 8 Bright A_SpawnProjectile("Redstar", 38, -15, 0, 0);
    Goto See;
  Death:
    TERM M 6 A_Scream();
    TERM N 4;
    TERM OPQ 4 Bright;
    TERM R 4 Bright
    {
      A_FaceTarget();
      A_SpawnItemEx("TerminatorHead", 15, 0, 90, 10, 0, 0, -170, SXF_CLIENTSIDE);
      A_SpawnItemEx("TerminatorShoulder", 60, 0, 75, 8, 0, 0, -70, SXF_CLIENTSIDE);
      A_SpawnItemEx("TerminatorArm", 60, 0, 0, 3, 0, 0, -90, SXF_CLIENTSIDE);
    }
    TERM STUV 4 Bright;
    TERM W 4;
    TERM X 6 A_Fall();
    TERM Y 6;
    TERM Z 1 A_Playsound("Terminator/terstepA");
    TERM Z 5;
    TERM [ -1;
    Stop;
   }
}

Class TerminatorBlaster : Actor
{
  Default
  {
    Radius 8;
    Height 12;
    Speed 24;
    Damage 15;
    RENDERSTYLE "ADD";
    alpha 0.85;
    Decal "RevenantScorch";
    SeeSound "monster/brufir";
    DeathSound "weapons/hellex";
    PROJECTILE;
    +THRUGHOST
  }
   States
   {
   Spawn:
      BLST A 1 Bright;
      loop;
   Death:
      BLST B 6 Bright A_Explode(40,72, XF_HURTSOURCE); //Original had DONTHURTSHOOTER, but it was not used because this was doing >0 amounts of damage
      BLST CDEFGHIJKL 3 Bright;
      stop;
   }
}

Class Redstar : Actor
{
  Default
  {
    Radius 10;
    Height 20;
    Speed 13;
    Damage 10;
    Scale 0.6;
    RENDERSTYLE "ADD";
    ALPHA 0.8;
    Decal "CacoScorch";
    SeeSound "Terminator/tershotA";
    DeathSound "imp/shotx";
    PROJECTILE;
    +SEEKERMISSILE
  }

  States
  {
  Spawn:
    STAR ABCD 3 Bright A_SeekerMissile (10,15);
    Loop;
  Death:
    STAR EFGHIJKLMNO 3 Bright;
    Stop;
  }
}

Class Redgrenade : Actor
{
  Default
  {
    Radius 6;
    Height 12;
    Speed 20;
    Damage 5;
    RENDERSTYLE "ADD";
    ALPHA 0.8;
    DeathSound "imp/shotx";
    PROJECTILE;
    +DoomBounce
    -NoGravity
  }

  States
  {
  Spawn:
    TGND A 0;
    TGND A 1 Bright Thrustthingz(0, 24, 0, 1);
    TGND A 1 Bright A_Playsound("Terminator/tershotA");
    TGND BBBBCCCCAAAA 1 Bright A_SpawnItemEx("grenadetrail", 0,0,0, 0,0,0, 0, SXF_CLIENTSIDE);
    TGND A 0 A_JumpIfCloser(48, "Death");
    Goto Spawn+3;
  Death:
    STAR E 3 Bright A_Explode(40,72,XF_HURTSOURCE);
    STAR F 3 Bright
    {
      A_SpawnProjectile("grenadeblast",0,0,  0, CMF_AIMDIRECTION | CMF_TRACKOWNER,0);
      A_SpawnProjectile("grenadeblast",0,0, 20, CMF_AIMDIRECTION | CMF_TRACKOWNER,0);
      A_SpawnProjectile("grenadeblast",0,0, 40, CMF_AIMDIRECTION | CMF_TRACKOWNER,0);
      A_SpawnProjectile("grenadeblast",0,0, 60, CMF_AIMDIRECTION | CMF_TRACKOWNER,0);
      A_SpawnProjectile("grenadeblast",0,0, 80, CMF_AIMDIRECTION | CMF_TRACKOWNER,0);
      A_SpawnProjectile("grenadeblast",0,0,100, CMF_AIMDIRECTION | CMF_TRACKOWNER,0);
      A_SpawnProjectile("grenadeblast",0,0,120, CMF_AIMDIRECTION | CMF_TRACKOWNER,0);
      A_SpawnProjectile("grenadeblast",0,0,140, CMF_AIMDIRECTION | CMF_TRACKOWNER,0);
      A_SpawnProjectile("grenadeblast",0,0,160, CMF_AIMDIRECTION | CMF_TRACKOWNER,0);
      A_SpawnProjectile("grenadeblast",0,0,180, CMF_AIMDIRECTION | CMF_TRACKOWNER,0);
      A_SpawnProjectile("grenadeblast",0,0,200, CMF_AIMDIRECTION | CMF_TRACKOWNER,0);
      A_SpawnProjectile("grenadeblast",0,0,220, CMF_AIMDIRECTION | CMF_TRACKOWNER,0);
      A_SpawnProjectile("grenadeblast",0,0,240, CMF_AIMDIRECTION | CMF_TRACKOWNER,0);
      A_SpawnProjectile("grenadeblast",0,0,260, CMF_AIMDIRECTION | CMF_TRACKOWNER,0);
      A_SpawnProjectile("grenadeblast",0,0,280, CMF_AIMDIRECTION | CMF_TRACKOWNER,0);
      A_SpawnProjectile("grenadeblast",0,0,300, CMF_AIMDIRECTION | CMF_TRACKOWNER,0);
      A_SpawnProjectile("grenadeblast",0,0,320, CMF_AIMDIRECTION | CMF_TRACKOWNER,0);
      A_SpawnProjectile("grenadeblast",0,0,340, CMF_AIMDIRECTION | CMF_TRACKOWNER,0);
    }
    STAR GHIJKLMNO 3 Bright;
    Stop;
  }
}

Class Grenadetrail : Actor
{
  Default
  {
    Renderstyle "ADD";
    Alpha 0.6;
    DamageType "Redblast";
       PROJECTILE;
       +NOCLIP
  }

  States
  {
  Spawn:
    TGTR ABCDEFGHI 4 Bright;
    Stop;
  }
}


Class Grenadeblast : Actor
{
  Default
  {
    Radius 6;
    Height 12;
    Speed 5;
    Damage 4;
    RENDERSTYLE "ADD";
    ALPHA 0.8;
    SeeSound "imp/attack";
    DeathSound "imp/shotx";
    PROJECTILE;
    +Ripper
  }

  States
  {
  Spawn:
    TGBL ABCDEFGHIJK 2 Bright;
    stop;
  }
}


Class Terminatorpuff : Bulletpuff
{
  Default
  {
    Renderstyle "ADD";
    Alpha 0.75;
    scale 0.75;
    Decal "Bulletchip";
  }

  States
  {
  Spawn:
  Melee:
    TPUF A 2 Bright;
    TPUF A 0 A_Jump(128, "Anim2");
    TPUF BCDEFGH 2 Bright;
    Stop;
  Anim2:
    TPUF IJKLMNO 2 Bright;
    Stop;
  }
}

Class TerminatorArm : Actor
{
  Default
  {
    Radius 12;
    Height 15;
    Speed 3;
    Mass 1000;
    scale 1.2;
    +DOOMBOUNCE
  }

  States
  {
  Spawn:
    TARM A 5;
    TARM B 5 A_Fall();
    TARM CDE 5;
    TARM F -1;
    Stop;
  }
}

Class TerminatorHead : Actor
{
  Default
  {
    Radius 6;
    Height 8;
    Speed 10;
    Mass 1000;
    scale 1.2;
    +DOOMBOUNCE
    +DROPOFF
    +Missile
  }

  States
  {
  Spawn:
    THAD DEFGHABC 2;
    loop;
  Death:
    THAD I -1;
    loop;
  }
}

Class TerminatorShoulder : Actor
{
  Default
  {
    Radius 8;
    Height 8;
    Speed 8;
    Mass 1000;
    scale 1.2;
    +DOOMBOUNCE
    +DROPOFF
    +Missile
  }

  States
  {
  Spawn:
    TSHO ABCDEFGH 2;
    loop;
  Death:
    TSHO I -1;
    loop;
  }
}

Class OverLord : Actor
{
  Default
  {
    Health 4000;
    Radius 43;
    Height 90;
    Mass 1000;
    Speed 13;
    PainChance 20;
    DamageType "Normal";
    //DropItem "UnmakerHeart", 256;
    DamageFactor "Lightning", 0.0;
    Obituary "%o was smote by the Overlord.";
    HitObituary "The Overlord ate %o for lunch.";
    MeleeRange 68;
    SeeSound "monster/ovlsit";
    PainSound "monster/ovlpai";
    DeathSound "monster/ovldth";
    ActiveSound "monster/ovlact";
    MONSTER;
    +FLOORCLIP
    +NORADIUSDMG
    +BOSS
    +NOTARGET
    +MISSILEEVENMORE
    +FLOAT
    +NOGRAVITY
    +DONTFALL
  }

  states
  {
  Spawn:
    OVER A 10 A_Look();
    loop;
  See:
    OVER A 0 A_UnSetInvulnerable();
    OVER AABBAACC 3 A_Chase();
    OVER A 0 A_Jump(32,"Teleport");
    goto See+1;
  Missile:
    OVER D 0 A_Jump(256,"Missile1","Missile2","Missile3");
  Missile1:
    OVER DE 8 A_FaceTarget();
    OVER FFFFF 4 bright A_PainAttack("HS");
    goto See;
  Missile2:
    OVER GH 8 Bright A_FaceTarget();
    OVER H 0 Bright A_JumpIfHealthLower(1500, "Missile2LowHealth");
    OVER H 1 Bright A_PlaySound("weapons/shock");
    OVER H 7 Bright A_SpawnProjectile("StormShot1",43,0,0,0,0);
    goto See;
  Missile2LowHealth:
    OVER H 1 Bright A_PlaySound("weapons/shock");
    OVER H 7 Bright A_SpawnProjectile("StormShot2",43,0,0,0,0);
    goto See;
  Missile3:
    OVER JJJJJJJJ 1 A_FaceTarget();
  Missile3Loop:
    OVER K 4 Bright
    {
      A_SpawnProjectile("HadesBall",92,-40, random(-3,3),0,random(-3,3));
      A_SpawnProjectile("HadesBall", 8,-40, random(-3,3),0,random(-3,3));
      A_SpawnProjectile("HadesBall",92, 40, random(-3,3),0,random(-3,3));
      A_SpawnProjectile("HadesBall", 8, 40, random(-3,3),0,random(-3,3));
      A_SpawnProjectile("OverBall", 54,-50, random(-3,3),0,random(-3,3));
      A_SpawnProjectile("OverBall", 54, 50, random(-3,3),0,random(-3,3));
    }
    OVER J 4 A_SpidRefire();
    OVER J 0 A_Jump(32,"See");
    loop;
  Melee:
    OVER ADF 5 A_FaceTarget();
    OVER E 5 A_CustomMeleeAttack(20*random(1,8), "caco/melee");
    goto See;
  Pain:
    OVER L 6;
    OVER L 6 A_Pain();
    OVER L 0 A_Jump(40,"Teleport");
    goto See;
  Teleport:
    OVER F 0 A_SetInvulnerable();
    OVER F 1 A_PlaySound("monster/heltel");
    OVER F 1 A_SetTranslucent(0.90);
    OVER F 1 A_SetTranslucent(0.80);
    OVER F 1 A_SetTranslucent(0.70);
    OVER F 1 A_SetTranslucent(0.60);
    OVER F 1 A_SetTranslucent(0.50);
    OVER F 1 A_SetTranslucent(0.40);
    OVER F 1 A_SetTranslucent(0.30);
    OVER F 1 A_SetTranslucent(0.20);
    OVER F 1 A_SetTranslucent(0.10);
    OVER F 0 A_Jump(128,25);
    TNT1 AAAAAAAAAAAAAAAAAAAAAAAA 0 A_Chase(null, null, CHF_NIGHTMAREFAST);
    TNT1 A 0 A_Jump(128,25);
    TNT1 AAAAAAAAAAAAAAAAAAAAAAAA 0 A_Chase(null, null, CHF_NIGHTMAREFAST);
    OVER F 1 A_PlaySound("monster/heltel");
    OVER F 1 A_SetTranslucent(0.10);
    OVER F 1 A_SetTranslucent(0.20);
    OVER F 1 A_SetTranslucent(0.30);
    OVER F 1 A_SetTranslucent(0.40);
    OVER F 1 A_SetTranslucent(0.50);
    OVER F 1 A_SetTranslucent(0.60);
    OVER F 1 A_SetTranslucent(0.70);
    OVER F 1 A_SetTranslucent(0.80);
    OVER F 1 A_SetTranslucent(0.90);
    OVER F 1 A_SetTranslucent(1.0);
    OVER F 0 A_UnSetInvulnerable();
    goto See;
  Death:
    OVER M 0 bright A_FaceTarget();
    OVER M 8 bright A_Scream();
    OVER NO 8 bright;
    OVER P 8 bright //Spawn gibs!
    {
      for(int i=0; i<5; i++)
      {
        A_SpawnProjectile("OverFlesh1",random(0,90),random(0,40),random(-180,180),CMF_AIMDIRECTION,random(-15,15));
        A_SpawnProjectile("OverFlesh2",random(0,90),random(0,40),random(-180,180),CMF_AIMDIRECTION,random(-15,15));
      }
      for(int i=0; i<10; i++)
      {
        A_SpawnProjectile("OverFlesh3",random(0,90),random(0,40),random(-180,180),CMF_AIMDIRECTION,random(-15,15));
        A_SpawnProjectile("OverFlesh4",random(0,90),random(0,40),random(-180,180),CMF_AIMDIRECTION,random(-15,15));
        A_SpawnProjectile("OverFlesh5",random(0,90),random(0,40),random(-180,180),CMF_AIMDIRECTION,random(-15,15));
        A_SpawnProjectile("OverFlesh6",random(0,90),random(0,40),random(-180,180),CMF_AIMDIRECTION,random(-15,15));
      }
      A_SpawnProjectile("OverBigArm1",   40,-40,-90, CMF_AIMDIRECTION,random( -1, 1));
      A_SpawnProjectile("OverBigArm2",   40, 40, 90, CMF_AIMDIRECTION,random( -1, 1));
      A_SpawnProjectile("OverSmallArm1",100,-30,-90, CMF_AIMDIRECTION,random(-15,15));
      A_SpawnProjectile("OverSmallArm1",100, 30, 90, CMF_AIMDIRECTION,random(-15,15));
      A_SpawnProjectile("OverSmallArm2",100,-30,-90, CMF_AIMDIRECTION,random(-15,15));
      A_SpawnProjectile("OverSmallArm2",100, 30, 90, CMF_AIMDIRECTION,random(-15,15));
      A_SpawnProjectile("OverHorn1",    110,-16,-90, CMF_AIMDIRECTION,random(-15,15));
      A_SpawnProjectile("OverHorn2",    110, 16, 90, CMF_AIMDIRECTION,random(-15,15));
    }
    OVER QRSTUV 8 bright;
    stop;
  }
}

Class OverFlesh1 : Actor
{
  Default
  {
    Speed 8;
    Mass 100;
    Radius 1;
    Height 1;
    PROJECTILE;
    +THRUGHOST
    +LOWGRAVITY
    -NOGRAVITY
    +ClientSideOnly
  }

  States
  {
  Spawn:
    OVF1 ACEGIKM 5;
    loop;
  Death:
    OVF1 O 3;
    OVF1 Q -1;
    stop;
  }
}

Class OverFlesh2 : OverFlesh1
{
  States
  {
  Spawn:
    OVF1 BDFHJLN 5;
    loop;
  Death:
    OVF1 P 3;
    OVF1 R -1;
    stop;
  }
}

Class OverFlesh3 : OverFlesh1
{
  States
  {
  Spawn:
    OVF2 ACEG 5;
    loop;
  Death:
    OVF2 I -1;
    loop;
  }
}

Class OverFlesh4 : OverFlesh1
{
  States
  {
  Spawn:
    OVF2 BDFH 5;
    loop;
  Death:
    OVF2 J -1;
    loop;
  }
}

Class OverFlesh5 : OverFlesh1
{
  States
  {
  Spawn:
    OVF3 ACEGI 5;
    loop;
  Death:
    OVF3 K -1;
    loop;
  }
}

Class OverFlesh6 : OverFlesh1
{
  States
  {
  Spawn:
    OVF3 BDFHJ 5;
    loop;
  Death:
    OVF3 L -1;
    loop;
  }
}

Class OverBigArm1 : OverFlesh1
{
  States
  {
  Spawn:
    OVF4 ACEGI 5;
    loop;
  Death:
    OVF4 K 3;
    OVF4 M -1;
    stop;
  }
}

Class OverBigArm2 : OverFlesh1
{
  States
  {
  Spawn:
    OVF4 BDFHJ 5;
    loop;
  Death:
    OVF4 L 3;
    OVF4 N -1;
    stop;
  }
}

Class OverSmallArm1 : OverFlesh1
{
  States
  {
  Spawn:
    OVF5 ACEG 5;
    loop;
  Death:
    OVF5 I -1;
    stop;
  }
}

Class OverSmallArm2 : OverFlesh1
{
  States
  {
  Spawn:
    OVF5 BDFH 5;
    loop;
  Death:
    OVF5 J -1;
    stop;
  }
}

Class OverHorn1 : OverFlesh1
{
  States
  {
  Spawn:
    OVF6 ACEGI 5;
    loop;
  Death:
    OVF6 K -1;
    stop;
  }
}

Class OverHorn2 : OverFlesh1
{
  States
  {
  Spawn:
    OVF6 BDFHJ 5;
    loop;
  Death:
    OVF6 L -1;
    stop;
  }
}

// [MagicWazard] This projectile is shared with the Hades Elemental

Class HadesBall : CacodemonBall
{
  Default
  {
    Damage 8;
    Speed 15;
    Alpha 0.80;
    DamageType "lightning";
    SeeSound "Monster/hadtel";
    DeathSound "Monster/hadsit";
    Decal "CacoScorch";
    +ThruGhost
    +ForceXYBillboard
  }

  States
  {
  Spawn:
    HEFX AB 4 Bright;
    Loop;
  Death:
    HEFX CDEEFGH 3 bright;
    Stop;
  }
}

// [MagicWazard] Exploding projectile similar to the HadesBall
Class OverBall : Actor
{
  Default
  {
    Radius 10;
    Height 20;
    Speed 15;
    Damage 8;
    DamageType "Lightning";
    RenderStyle "Add";
    Alpha 0.75;
    Translation "192:207=168:191";
    DeathSound "weapons/devzap";
    Decal "CacoScorch";
    PROJECTILE;
    +THRUGHOST
    +FORCEXYBILLBOARD
  }

  States
  {
  Spawn:
    AFX1 ABC 1 Bright;
    loop;
  Death:
    AFX1 DE 4 Bright A_Explode(32, 32, 0);
    AFX1 FGHI 4 bright;
    stop;
  }
}

// [MagicWazard] Giant ball that spawns smaller projectiles ("StormLite1") from sides
Class StormShot1 : Actor
{
  Default
  {
    Radius 12;
    Height 6;
    Speed 30;
    Damage 50;
    RenderStyle "Add";
    Alpha 0.80;
    DamageType "Lightning";
    DeathSound "weapons/devexp";
    PROJECTILE;
    +THRUGHOST
    +NODAMAGETHRUST
    +FORCEXYBILLBOARD
  }

  States
  {
  Spawn:
    LFX1 STUVW 1 Bright;
    LFX1 W 0 Bright A_SpawnProjectile("StormLite1",0,0, 90, CMF_AIMDIRECTION | CMF_TRACKOWNER);
    LFX1 W 0 Bright A_SpawnProjectile("StormLite1",0,0,270, CMF_AIMDIRECTION | CMF_TRACKOWNER);
    loop;
  Death:
    LFX1 STUVWSTUVWSTUVWSTUVWSTUVWSTUVWSTUVWSTUVWSTUVWSTUVWSTUVWSTUVW 1 Bright A_Explode(16,32,0);
    stop;
  }
}

// [MagicWazard] More powerful version of StormShot
Class StormShot2 : StormShot1
{
  Default
  {
    Damage 100;
  }

  States
  {
  Spawn:
    TNT1 A 2;
    LFX2 KLMNO 1 Bright;
    LFX2 O 0 Bright A_SpawnProjectile("StormLite2",0,0, 90, CMF_AIMDIRECTION | CMF_TRACKOWNER);
    LFX2 O 0 Bright A_SpawnProjectile("StormLite2",0,0,270, CMF_AIMDIRECTION | CMF_TRACKOWNER);
    Goto Spawn+1;
  Death:
    LFX2 KLMNO 1 Bright A_Explode(32,64,0);
    LFX2 KKKKKK 0 Bright A_SpawnItemEx("StormBolt",0,0,0,4,0,0,random(0,359),0,0);
    LFX2 LMNO 1 Bright A_Explode(32,64,0);
    stop;
  }
}

// [MagicWazard] Note: this actor is unused, though it acts as a parent for the
// "StormBolt" vertical lightning column its sprites do not appear to be used
// anywhere else in the actor...
Class StormStrike1 : Actor
{
  Default
  {
    Radius 16;
    Height 1;
    Speed 90;
    Damage 2;
    Damagetype "Lightning";
    RenderStyle "Add";
    Alpha 0.75;
    DeathSound "weapons/devzap";
    PROJECTILE;
    +THRUGHOST
    +RIPPER
    +NODAMAGETHRUST
    +STRIFEDAMAGE
  }

  States
  {
  Spawn:
    LFX1 IJKLM 1 Bright A_Explode(64,64,0);
    loop;
  Death:
    LFX1 NOPQR 2 Bright;
    stop;
  }
}

// [MagicWazard] Vertical lightning column spawned by StormShot2
Class StormBolt : StormStrike1
{
  Default
  {
    Speed 4;
    Radius 8;
    Height 16;
    Damage 1;
    Damagetype "lightning";
    SeeSound "weapons/none";
    DeathSound "weapons/gntidl";
    YScale 4.0;
    XScale 2.0;
    ReactionTime 35;
    +FLOORHUGGER
    +HEXENBOUNCE
    -NOGRAVITY
  }

  States
  {
  Spawn:
    LFX2 F 1 Bright A_Explode(16,64,0);
    LFX2 F 0 Bright A_SpawnProjectile("StormBolt2",16,0,0, CMF_AIMDIRECTION | CMF_TRACKOWNER,-90);
    LFX2 F 0 ThrustThing(random(0,255),1,0,0);
    LFX2 G 1 Bright A_Explode(16,64,0);
    LFX2 G 0 Bright A_SpawnProjectile("StormBolt2",16,0,0, CMF_AIMDIRECTION | CMF_TRACKOWNER,-90);
    LFX2 H 1 Bright A_Explode(16,64,0);
    LFX2 H 0 Bright A_SpawnProjectile("StormBolt2",16,0,0, CMF_AIMDIRECTION | CMF_TRACKOWNER,-90);
    LFX2 I 1 Bright A_Explode(16,64,0);
    LFX2 I 0 Bright A_SpawnProjectile("StormBolt2",16,0,0, CMF_AIMDIRECTION | CMF_TRACKOWNER,-90);
    LFX2 J 1 Bright A_Explode(16,64,0);
    LFX2 J 0 Bright A_SpawnProjectile("StormBolt2",16,0,0, CMF_AIMDIRECTION | CMF_TRACKOWNER,-90);
    LFX2 J 0 Bright A_CountDown();
    loop;
  Death:
    LFX2 FGHIJ 2 Bright A_Explode(16,64,0);
    stop;
  }
}

// [MagicWazard] Invisible sub-projectiles spawned by the lightning column in
// a vertical upwards path
Class StormBolt2 : StormStrike1
{
  Default
  {
    Speed 184;
    Damage 1;
    Height 15;
    Radius 8;
    Damagetype "lightning";
    SeeSound "Monster/hadtel";
    DeathSound "Monster/hadsit";
    +RIPPER
    +NOGRAVITY
  }

  States
  {
  Spawn:
    TNT1 A 1 Bright A_Explode(16,64,0);
    loop;
  Death:
    TNT1 A 1 Bright;
    stop;
  }
}

// [MagicWazard] Projectiles spawned from the sides of the large StormShot projectile
Class StormLite1 : Actor
{
  Default
  {
    Radius 6;
    Height 12;
    Speed 32;
    Damage 5;
    RenderStyle "Add";
    Alpha 0.80;
    Damagetype "Lightning";
    DeathSound "weapons/devzap";
    PROJECTILE;
    +THRUGHOST
    +RIPPER
    +FORCEXYBILLBOARD
  }

  States
  {
  Spawn:
    DLIT ABC 1 Bright;
    Loop;
  Death:
    DLIT DEFGHIJKLMNO 1 Bright;
    Stop;
  }
}

// [MagicWazard] More powerful version of StormLite1
Class StormLite2 : StormLite1
{
  Default
  {
    Speed 64;
    Damage 10;
  }

  States
  {
  Spawn:
    LFX1 XYZ 1 Bright;
    Loop;
  Death:
    LFX1 STUVW 3 Bright;
    Stop;
  }
}
//End of Overlord

// [MagicWazard] Notes: some sprites don't appear to be used by any actors. These
// include:
//   LFX1 A - H
//   LFX1 I - R (although they are assigned to an unused actor)
// It looks like you can delete these if you wish and it won't hurt anything.


//Hades Sphere
Class HS : Actor
{
  Default
  {
    Health 35;
    Radius 24;
    Height 48;
    Mass 3000;
    Speed 10;
    Obituary "%o was blown away by a Hades Sphere.";
    SeeSound "monster/hadsit";
    DeathSound "monster/hadexp";
    Monster;
    +LOOKALLAROUND
    +DONTGIB
    +NOTARGET
    +NOGRAVITY
    +FLOAT
    +DONTFALL
    //+DONTHARMCLASS // [MagicWazard] See "notes" below
  }

  States
  {
  Spawn:
    TNT1 A 1 Bright A_Look();
    Loop;
  See:
    HADE EFGH 4 Bright;
  SeeLoop:
    HADE A 2 Bright A_Playsound("monster/hadwlk");
    HADE ABBCCDD 2 Bright HS_SpecialChase();  // [Blue Shadow] Conditional A_Chase
    TNT1 A 0
    {
      if(!random(0, 7) && !bSkullfly) //A_Jump(32, "TeleportOut") when the SKULLFLY flag is off
        return ResolveState("TeleportOut");
      return ResolveState(null);
    }
    Loop;
  TeleportOut:
    TNT1 A 0 A_UnSetSolid();
    TNT1 A 0 A_UnSetShootable();
    HADE H 5 Bright A_Playsound("monster/hadtel");
    HADE GFEIJKL 4 Bright;
  SeeTeleport:
    TNT1 AAAAAAAA 2 A_Chase(null, null);
    TNT1 A 0 A_Jump(96, "TeleportIn");
    Loop;
  TeleportIn:
    HADE L 3 Bright A_Playsound("monster/hadtel");
    HADE KJIEFG 4 Bright;
    TNT1 A 0 A_SetShootable();
    TNT1 A 0 A_SetSolid();
    Goto SeeLoop;
  Melee:
    TNT1 A 0 A_SetInvulnerable();
    HADE HGFE 4 Bright;
    TNT1 A 0 A_UnSetInvulnerable();
    TNT1 A 0 A_SetShootable();
    TNT1 A 0 A_Die();
    Stop;
  Death:
    TNT1 A 0 A_NoBlocking();
    TNT1 A 0 A_SetTranslucent(0.9, 1);
    TNT1 A 0 A_Scream();
    HADE M 4 Bright A_Explode(112, 112, XF_NOTMISSILE);
    HADE NOPQ 5 Bright;
    Stop;
  XDeath:
    TNT1 A 0 A_Noblocking();
    HADE H 5 Bright A_PlaySound("monster/haddth");
    HADE GFE 4 Bright;
    HADE RSTUVWX 4 Bright;
    Stop;
  Death.Ice:
    "####" "#" 0 { bNoGravity=false; }
    Goto GenericFreezeDeath;
  }

  // [Blue Shadow] Depending on whether or not the Hades Sphere is currently flying
  // (due to A_SkullAttack), choose the appropriate "chase mode".
  // [ Ghastly ] This is now a new function, rather than an inventory item.
  void HS_SpecialChase()
  {
    if( bSkullFly )
      A_Chase(null, null);
    else
      A_Chase();
  }
}

// [MagicWazard] NOTES: +DONTHARMCLASS was originally enabled, but HS were still
// able to damage each other with self-destructs due to way the self-destruct
// was coded. Now that the self-destruct code has been changed, they are
// invulnerable to each others' explosions if that flag is enabled. Keep
// +DONTHARMCLASS disabled if you want the HS to be vunlerable to each others'
// explosions! Remove the comments and enable the flag if you want the HS to be
// immune to other HS' self-destruct damage.

//End of Hades Sphere

//Hades Elemental
Class Helemental : Actor
{
  Default
  {
    Tag "Hades Elemental";
    Obituary "%o was electrocuted by a Hades-Elemental.";
    HitObituary "%o got chomped by a Hades-Elemental.";
    Health 1600;
    Radius 34;
    Height 64;
    Mass 800;
    Speed 10;
    PainChance 32;
    DamageType "normal";
    SeeSound "monster/helsit";
    PainSound "monster/helpai";
    DeathSound "monster/heldth";
    ActiveSound "monster/helact";
    Monster;
    +Float
    +NoGravity
    +Boss
    +MissileMore
    +Notarget
    +DontHarmClass
    +NoRadiusDmg
  }

  States
  {
  Spawn:
    HELE A 10 A_Look();
    Loop;
  See:
    HELE A 0 A_SetShootable();
    HELE AAAAAAAAAAAA 3 A_Chase();
    HELE A 0 A_Jump(72, "Teleport");
    Loop;
  Teleport:
    HELE A 0 A_UnSetshootable();
    HELE A 1 A_PlaySound("monster/heltel");
    HELE A 1 A_SetTranslucent(0.90);
    HELE A 1 A_SetTranslucent(0.80);
    HELE A 1 A_SetTranslucent(0.70);
    HELE A 1 A_SetTranslucent(0.60);
    HELE A 1 A_SetTranslucent(0.50);
    HELE A 1 A_SetTranslucent(0.40);
    HELE A 1 A_SetTranslucent(0.30);
    HELE A 1 A_SetTranslucent(0.20);
    HELE A 1 A_SetTranslucent(0.10);
    TNT1 A 0 A_Jump(128,25);
    TNT1 AAAAAAAAAAAAAAAAAAAAAAAA 0 A_Wander();
    TNT1 A 0 A_Jump(128,25);
    TNT1 AAAAAAAAAAAAAAAAAAAAAAAA 0 A_Chase(null, null, CHF_NIGHTMAREFAST);
    HELE A 1 A_PlaySound("monster/heltel");
    HELE A 1 A_SetTranslucent(0.10);
    HELE A 1 A_SetTranslucent(0.20);
    HELE A 1 A_SetTranslucent(0.30);
    HELE A 1 A_SetTranslucent(0.40);
    HELE A 1 A_SetTranslucent(0.50);
    HELE A 1 A_SetTranslucent(0.60);
    HELE A 1 A_SetTranslucent(0.70);
    HELE A 1 A_SetTranslucent(0.80);
    HELE A 1 A_SetTranslucent(0.90);
    HELE A 1 A_SetTranslucent(1.0);
    HELE A 0 A_SetShootable();
    Goto See;
  Missile:
    HELE E 0 A_Jump(80, "Missile2");
    HELE EF 5 Bright A_Facetarget();
    HELE G 5 Bright
    {
      A_SpawnProjectile("HadesBall",24,0,-10,0,0);
      A_SpawnProjectile("HadesBall",24,0, -5,0,0);
      A_SpawnProjectile("HadesBall",24,0,  0,0,0);
      A_SpawnProjectile("HadesBall",24,0,  5,0,0);
      A_SpawnProjectile("HadesBall",24,0, 10,0,0);
    }
    Goto See+1;
  Missile2:
    HELE E 0 A_Jump(128, "Missile3");
    HELE EF 5 Bright A_Facetarget();
    HELE G 5 Bright
    {
      A_SpawnProjectile("HadesBolt",32,0,-16,0,0);
      A_SpawnProjectile("HadesBolt",32,0,  0,0,0);
      A_SpawnProjectile("HadesBolt",32,0, 16,0,0);
    }
    Goto See+1;
  Missile3:
    HELE BC 5 Bright A_Facetarget();
    HELE D 5 Bright A_DualPainAttack("HS");
    Goto See+1;
  Melee:
    HELE ABD 5 Bright A_Facetarget();
    HELE C 5 Bright A_CustomMeleeAttack(10*random(1,8), "caco/melee");
    Goto See+1;
  Pain:
    HELE H 3;
    HELE H 9 A_Pain();
    Goto See;
  Death:
    HELE I 5 Bright A_Scream();
    HELE JKL 5 Bright;
    HELE M 5 Bright A_NoBlocking();
    HELE N 5 Bright
    {
      A_SpawnItemEx("HS", 36, 36);
      A_SpawnItemEx("HS",-36, 36);
      A_SpawnItemEx("HS",-36,-36);
      A_SpawnItemEx("HS", 36,-36);
    }
    HELE OP 5 Bright;
    HELE QRSTU 5;
    HELE V -1 A_SetFloorClip();
    Stop;
  }
}

Class HadesBolt : CacodemonBall
{
  Default
  {
    Damage 5;
    Speed 5;
    Radius 8;
    Height 8;
    Damagetype "lightning";
    SeeSound "weapons/none";
    DeathSound "weapons/gntidl";
    YScale 4.0;
    XScale 2.0;
    ReactionTime 35;
    +FloorHugger
    +HexenBounce
    +Ripper
    -NoGravity
    -StrifeDamage
  }

  States
  {
  Spawn:
    LFX2 F 1 Bright A_Explode(16,64,0);
    LFX2 F 0 Bright A_SpawnProjectile("HadesBolt2",0,0,0, CMF_AIMDIRECTION | CMF_TRACKOWNER,-90);
    LFX2 F 0 ThrustThing(random(0,255),1,0,0);
    LFX2 G 1 Bright A_Explode(16,64,0);
    LFX2 G 0 Bright A_SpawnProjectile("HadesBolt2",0,0,0, CMF_AIMDIRECTION | CMF_TRACKOWNER,-90);
    LFX2 H 1 Bright A_Explode(16,64,0);
    LFX2 H 0 Bright A_SpawnProjectile("HadesBolt2",0,0,0, CMF_AIMDIRECTION | CMF_TRACKOWNER,-90);
    LFX2 I 1 Bright A_Explode(16,64,0);
    LFX2 I 0 Bright A_SpawnProjectile("HadesBolt2",0,0,0, CMF_AIMDIRECTION | CMF_TRACKOWNER,-90);
    LFX2 J 1 Bright A_Explode(16,64,0);
    LFX2 J 0 Bright A_SpawnProjectile("HadesBolt2",0,0,0, CMF_AIMDIRECTION | CMF_TRACKOWNER,-90);
    LFX2 J 0 Bright A_CountDown();
    Loop;
  Death:
    LFX2 FGHIJ 2 Bright A_Explode(32,64,0);
    Stop;
  }
}

Class HadesBolt2 : CacodemonBall
{
  Default
  {
    Damage 0;
    Speed 184;
    RenderStyle "None";
    DamageType "Lightning";
    SeeSound "Monster/hadtel";
    DeathSound "Monster/hadsit";
    +ThruGhost
    +Ripper
  }

  States
  {
  Spawn:
    TNT1 A 1 Bright A_Explode(16,64,0);
    Loop;
  Death:
    TNT1 A 1 Bright;
    Stop;
  }
}
//End of Hades Elemental